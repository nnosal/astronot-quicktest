---
import { withBase } from '../utils/path.ts';
import { Image, getImage } from "astro:assets";
import { postImageImport } from "../helpers/images.mjs";

const latestPosts = (await Astro.glob("../pages/posts/*.mdx"))
  .sort(
    (a: any, b: any) =>
      new Date(b.frontmatter.publish_date) -
      new Date(a.frontmatter.publish_date),
  )
  .slice(0, 4);

const { fullWidth = true, animated = false } = Astro.props;
---

<aside
  aria-label="Related articles"
  class={`mt-12 bg-gray-50 py-8 dark:bg-gray-800 dark:bg-opacity-80 lg:mt-0  ${
    !fullWidth ? "mx-auto max-w-screen-xl rounded-lg lg:py-12" : "lg:py-24"
  }`}
>
  <div class="mx-auto max-w-screen-xl px-4">
    <h2
      class="-mt-4 mb-8 pl-2 text-3xl font-bold text-gray-900 dark:text-white"
    >
      Latest Blogs
    </h2>
    <div class="grid gap-12 sm:grid-cols-2 lg:grid-cols-4">
      {
        latestPosts.map(async (post) => {
          const { title, cover, slug, id, reading_time, description } =
            post.frontmatter;
          let imageFilePath = (await postImageImport(cover)).default;

          let coverImageSrc = "";
          let preloadCoverImageSrc = "";
          let preloadCoverImageMobileSrc = "";

          if (cover) {
            coverImageSrc = (
              await getImage({
                src: imageFilePath,
                width: 452,
              })
            ).src;

            preloadCoverImageSrc = (
              await getImage({
                src: imageFilePath,
                width: 1920,
                height: 1080,
              })
            ).src;

            preloadCoverImageMobileSrc = (
              await getImage({
                src: imageFilePath,
                width: 720,
                height: 480,
              })
            ).src;
          }

          return (
            <article class="max-w-xs">
              {cover && (
                <>
                  <a href={withBase(`posts/${slug}`)}>
                    <img
                      src={coverImageSrc}
                      class="mb-5 max-h-[127px] rounded-lg object-cover"
                      alt="Image 1"
                      width={452}
                      style={
                        animated
                          ? `view-transition-name: cover-image-${id}; contain: layout;`
                          : ""
                      }
                    />
                  </a>

                  <link rel="prefetch" href={preloadCoverImageSrc} as="image" />
                  <link
                    rel="prefetch"
                    href={preloadCoverImageMobileSrc}
                    as="image"
                  />
                </>
              )}
              <div
                style={
                  animated
                    ? `view-transition-name: cover-title-${id}; contain: layout;`
                    : ""
                }
              >
                <h2 class="mb-2 text-xl font-bold leading-tight text-gray-900 dark:text-white ">
                  <a href={withBase(`posts/${slug}`)}>{title}</a>
                </h2>
                <p class="mb-4 text-gray-500 dark:text-gray-400">
                  {(description !== "undefined" && description) || ""}
                </p>
                <a
                  href={withBase(`posts/${slug}`)}
                  class="inline-flex items-center font-medium text-primary-600 underline underline-offset-4 hover:no-underline dark:text-secondary-500"
                >
                  Read in {reading_time.replace(" read", "")}
                </a>
              </div>
            </article>
          );
        })
      }
    </div>
  </div>
</aside>
